name: ci
on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ShellCheck
        if: ${{ hashFiles('cleanzone') != '' }}
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: ShellCheck (non-blocking)
        if: ${{ hashFiles('cleanzone') != '' }}
        run: shellcheck -S warning -x ./cleanzone || true

      - name: Smoke test (tolerant + extra debug)
        if: ${{ hashFiles('cleanzone') != '' }}
        shell: bash
        run: |
          set -euo pipefail
          chmod +x ./cleanzone
          echo "== Script version =="
          ./cleanzone -V || true

          echo "== Prepare demo workspace =="
          rm -rf demo
          mkdir -p demo/dist demo/keep
          touch "demo/a.txt:Zone.Identifier"
          touch "demo/dist/b.txt:Zone.Identifier"
          echo "Workspace:"
          find demo -maxdepth 2 -type f -print | sort

          echo "== Dry-run (recursive) with -- excludes =="
          out=$(cd demo && ../cleanzone -rl -- dist || true)
          printf '%s' "$out"

          echo "== Normalize output (strip leading './') =="
          norm=$(printf '%s' "$out" | sed -E 's#^\./##')
          printf 'NORM> %s' "$norm" || true

          echo "== Assertions =="
          # a.txt must appear (with or without ./ prefix)
          if ! grep -Fq "a.txt:Zone.Identifier" <<<"$norm"; then
            echo "Expected 'a.txt:Zone.Identifier' in dry-run output"; exit 1
          fi
          # dist/b.txt must be excluded
          if grep -Fq "dist/b.txt:Zone.Identifier" <<<"$norm"; then
            echo "Expected dist/ to be excluded by '-- dist'"; exit 1
          fi

          echo "== Delete without prompt (rfy) =="
          (cd demo && ../cleanzone -rfy -- dist)

          echo "== Logging check =="
          ls -la demo || true
          if [[ ! -f demo/cleanzone.log ]]; then
            echo "Expected log file demo/cleanzone.log to exist"; exit 1
          fi
          echo "Log head:"
          head -n 5 demo/cleanzone.log || true

          echo "Smoke test passed."

      - name: Note if script is missing
        if: ${{ hashFiles('cleanzone') == '' }}
        run: echo "No 'cleanzone' file found in repo root; skipping checks."
