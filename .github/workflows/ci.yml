name: ci
on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ShellCheck
        if: ${{ hashFiles('cleanzone') != '' }}
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: ShellCheck (non-blocking)
        if: ${{ hashFiles('cleanzone') != '' }}
        run: shellcheck -S warning -x ./cleanzone || true

      - name: Smoke test (count & log based)
        if: ${{ hashFiles('cleanzone') != '' }}
        shell: bash
        run: |
          set -euo pipefail
          chmod +x ./cleanzone

          # Fresh workspace
          rm -rf demo
          mkdir -p demo/dist demo/keep
          touch "demo/a.txt:Zone.Identifier" "demo/dist/b.txt:Zone.Identifier"

          echo "== Dry-run =="
          (cd demo && ../cleanzone -rl)

          cnt_before=$(find demo -type f -name '*:Zone.Identifier' | wc -l | tr -d '[:space:]')
          echo "count_before=$cnt_before"
          if [ "$cnt_before" != "2" ]; then
            echo "Expected 2 ADS files before delete"; find demo -type f -maxdepth 2 -print; exit 1
          fi

          echo "== Delete =="
          (cd demo && ../cleanzone -rfy)

          cnt_after=$(find demo -type f -name '*:Zone.Identifier' | wc -l | tr -d '[:space:]')
          echo "count_after=$cnt_after"
          if [ "$cnt_after" != "0" ]; then
            echo "Expected 0 ADS files after delete"; find demo -type f -maxdepth 2 -print; exit 1
          fi

          # Log should exist and contain at least one 'removed:' line
          if [ ! -f demo/cleanzone.log ]; then
            echo "Expected log file demo/cleanzone.log to exist"; ls -la demo; exit 1
          fi
          if ! grep -Fq "removed:" demo/cleanzone.log; then
            echo "Expected 'removed:' entries in demo/cleanzone.log"; echo "--- log head ---"; head -n 50 demo/cleanzone.log || true; exit 1
          fi

          echo "Smoke test passed."
